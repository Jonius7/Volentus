# This is the default config. Rename it to curvy_pipes.yaml before making edit. Otherwise, it will be overwritten.

# If true, unknown pipes in save data will be deleted instead of crashing.
ignore_unknown_pipes: false

# Pipe types are defined here. You can remove this section entirely if you only want pipes added by cross-mod integrations.
pipe_types:
  - # Unique key of this pipe type, also served as the translation key
    key: curvy.item.tiny
    # Meta value of the `curvy_pipes:pipe` item
    meta: 0
    # Default (fallback) translation of `key.name`
    name: Tiny Item Pipe
    # Texture must be in the `blocks` directory.
    texture: curvy_pipes:tiny_item_pipe
    # Smaller diameter allows more pipes to fit in tight (e.g. single block) space.
    # There is no upper limit on diameter: pipes can be multiple blocks wide.
    diameter: 0.1
    # Items per tick (can be smaller than 1)
    variant: { Item: { rate: 0.1 } }
  - { key: curvy.item.small, meta: 1, name: Small Item Pipe, texture: curvy_pipes:small_item_pipe, diameter: 0.2, variant: { Item: { rate: 1. } } }
  - { key: curvy.item.medium, meta: 2, name: Medium Item Pipe, texture: curvy_pipes:item_pipe, diameter: 0.4, variant: { Item: { rate: 10. } } }
  - { key: curvy.item.large, meta: 3, name: Large Item Pipe, texture: curvy_pipes:item_pipe, diameter: 0.8, variant: { Item: { rate: 100. } } }
  - { key: curvy.item.huge, meta: 4, name: Huge Item Pipe, texture: curvy_pipes:huge_item_pipe, diameter: 1.6, variant: { Item: { rate: 1E3 } } }

  # Fluid transfer rate is mB per tick.
  - { key: curvy.fluid.tiny, meta: 5, name: Tiny Fluid Pipe, texture: curvy_pipes:tiny_fluid_pipe, diameter: 0.1, variant: { Fluid: { rate: 10. } } }
  - { key: curvy.fluid.small, meta: 6, name: Small Fluid Pipe, texture: curvy_pipes:small_fluid_pipe, diameter: 0.2, variant: { Fluid: { rate: 100. } } }
  - { key: curvy.fluid.medium, meta: 7, name: Medium Fluid Pipe, texture: curvy_pipes:fluid_pipe, diameter: 0.4, variant: { Fluid: { rate: 1E3 } } }
  - { key: curvy.fluid.large, meta: 8, name: Large Fluid Pipe, texture: curvy_pipes:fluid_pipe, diameter: 0.8, variant: { Fluid: { rate: 10E3 } } }
  - { key: curvy.fluid.huge, meta: 9, name: Huge Fluid Pipe, texture: curvy_pipes:huge_fluid_pipe, diameter: 1.6, variant: { Fluid: { rate: 100E3 } } }

  # Energy transfer rate is RF per tick.
  - { key: curvy.energy.tiny, meta: 10, name: Tiny Energy Pipe, texture: curvy_pipes:tiny_energy_pipe, diameter: 0.1, variant: { Energy: { rate: 1E3 } } }
  - { key: curvy.energy.small, meta: 11, name: Small Energy Pipe, texture: curvy_pipes:small_energy_pipe, diameter: 0.2, variant: { Energy: { rate: 10E3 } } }
  - { key: curvy.energy.medium, meta: 12, name: Medium Energy Pipe, texture: curvy_pipes:energy_pipe, diameter: 0.4, variant: { Energy: { rate: 100E3 } } }
  - { key: curvy.energy.large, meta: 13, name: Large Energy Pipe, texture: curvy_pipes:energy_pipe, diameter: 0.8, variant: { Energy: { rate: 1E6 } } }
  - { key: curvy.energy.huge, meta: 14, name: Huge Energy Pipe, texture: curvy_pipes:huge_energy_pipe, diameter: 1.6, variant: { Energy: { rate: 10E6 } } }

# Applied Energistics 2 integration (ignored if AE2 is not installed)
ae2:
  # Automatically generate curvy variants of ME glass/covered/smart/dense covered/dense smart cables
  # and quartz fiber. No new items will be added. Instead, the curvy variants can be placed using the
  # corresponding AE2 items.
  # Allowed values:
  #   Toggle: attacking air while holding AE2 cables will toggle between normal and curvy variants.
  #   Always: always place the curvy variants. The original AE2 variant can no longer be placed.
  #   Disable: do not generate the curvy variants.
  cables: Toggle

# GT5u (GTNH version) integration (ignored if GT5u is not installed)
gt5u:
  # Automatically generate curvy EU cables, item pipes and fluid pipes for every GT5u material.
  # No new items will be added. Instead, the curvy variants can be placed using the corresponding GT5u items.
  # Note that the curvy item & fluid pipes use Curvy Pipes' logistics system and can't accept GT5u covers.
  # The curvy fluid pipes follow the same temperature & material restrictions specified by the GT5u pipes.
  # Curvy EU cables support amp-splitting, i.e. they can distribute load across parallel cables.
  # Allowed values: same as the AE2 integration above.
  eu_cables: Toggle
  item_pipes: Toggle
  fluid_pipes: Toggle

# You can customize recipes here. For shapeless recipe, remove the `shape` field and make `in` a sequence instead of a map.
# You can also remove this section entirely if you want to use other mods to manage recipes.
recipes:
  - out: { name: curvy_pipes:pipe, meta: 1, qty: 1 }
    shape: [ 'AAA', 'ABA', 'AAA' ]
    in: { A: 'ingotGold', B: 'stone' }
  - out: { name: curvy_pipes:pipe, meta: 6, qty: 1 }
    shape: [ ' A ', 'ABA', ' A ' ]
    in: { A: 'gemLapis', B: 'stone' }
  - out: { name: curvy_pipes:pipe, meta: 11, qty: 1 }
    shape: [ ' A ', 'ABA', ' A ' ]
    in: { A: 'dustRedstone', B: 'stone' }

# Automatically generate shapeless recipes for up conversion (e.g. 4 small to 1 medium) and down conversion (e.g. 1 medium to 4 small) chains.
# You can remove this section entirely if you don't need them.
conversion_chains:
  - factor: 4
    items: [ { name: curvy_pipes:pipe, meta: 0 }, { name: curvy_pipes:pipe, meta: 1 }, { name: curvy_pipes:pipe, meta: 2 },
             { name: curvy_pipes:pipe, meta: 3 }, { name: curvy_pipes:pipe, meta: 4 } ]
  - factor: 4
    items: [ { name: curvy_pipes:pipe, meta: 5 }, { name: curvy_pipes:pipe, meta: 6 }, { name: curvy_pipes:pipe, meta: 7 },
             { name: curvy_pipes:pipe, meta: 8 }, { name: curvy_pipes:pipe, meta: 9 } ]
  - factor: 4
    items: [ { name: curvy_pipes:pipe, meta: 10 }, { name: curvy_pipes:pipe, meta: 11 }, { name: curvy_pipes:pipe, meta: 12 },
             { name: curvy_pipes:pipe, meta: 13 }, { name: curvy_pipes:pipe, meta: 14 } ]
